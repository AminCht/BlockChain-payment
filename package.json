{
  "name": "ethereum-base-payment-gateway",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "dotenv -e development.env nest start --watch",
    "start:stage": "dotenv -e stage.env nest start --watch",
    "start:debug": "nest start --debug --watch",
    "create-wallet": "npm run build && dotenv -e development.env dotenv -v MODE=cmd node dist/main create-wallet",
    "create-admin": "npm run build && dotenv -e development.env dotenv -v MODE=cmd node dist/main create-admin",
    "create:test-wallet": "npm run build && dotenv -e test.env dotenv -v MODE=cmd node dist/main create-wallet",
    "check-balance": "npm run build && dotenv -e development.env dotenv -v MODE=cmd node dist/main check-balance",
    "typeorm": "ts-node ./node_modules/typeorm/cli",
    "createmigration:dev": "dotenv -e development.env -- npm run typeorm -- -d ./src/database/developmentDatasource.config.ts migration:generate ./src/database/dev_migrations/dev_migrations",
    "migrate:dev": "npm run build && dotenv -e development.env -- npm run typeorm migration:run -- -d ./src/database/developmentDatasource.config.ts",
    "createmigration:test": "dotenv -e test.env -- npm run typeorm -- -d ./src/database/testDatasource.config.ts migration:generate ./src/database/test_migrations/test_migrations",
    "migrate:test": "npm run build && dotenv -e test.env -- npm run typeorm migration:run -- -d ./src/database/testDatasource.config.ts",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "dotenv -e test.env jest",
    "test:watch": "dotenv -e test.env jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "dotenv -e test.env -- jest --config ./test/jest-e2e.json",
    "seed:run": "ts-node ./node_modules/typeorm-extension/bin/cli.cjs seed:run",
    "seed:create": "ts-node ./node_modules/typeorm-extension/bin/cli.cjs seed:create",
    "seed:test-db": "npm run build && dotenv -e test.env dotenv -v MODE=cmd node dist/main test-db-seeder"
  },
  "dependencies": {
    "@nestjs/common": "^10.1.3",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.1.3",
    "@nestjs/jwt": "^10.1.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.1.3",
    "@nestjs/swagger": "^7.1.8",
    "@nestjs/typeorm": "^10.0.0",
    "bcrypt": "^5.1.0",
    "better-sqlite3": "^8.5.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cookie-parser": "^1.4.6",
    "docker": "^1.0.0",
    "dotenv-cli": "^7.2.1",
    "env-cmd": "^10.1.0",
    "ethers": "^6.7.0",
    "mysql": "^2.18.1",
    "nest-commander": "^3.11.0",
    "nestjs-seeder": "^0.3.2",
    "passport-jwt": "^4.0.1",
    "pg": "^8.11.2",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "sqlite3": "^5.1.6",
    "swagger-ui-express": "^5.0.0",
    "typeorm": "^0.3.17",
    "typeorm-extension": "^3.0.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.1.11",
    "@nestjs/schematics": "^10.0.1",
    "@nestjs/testing": "^10.1.3",
    "@types/bcrypt": "^5.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "27.5.0",
    "@types/node": "^16.0.0",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "28.0.3",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.1",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.0.0",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "globalSetup": "<rootDir>/testConfig/beforTests.ts",
    "detectOpenHandles": true,
    "globalTeardown": "<rootDir>/testConfig/afterTests.ts"
  }
}
